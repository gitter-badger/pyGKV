{"name":"pyGKV","tagline":"Experimental Python bindings for gkv.","body":"## Experimental Python bindings for gkv.\r\n\r\n[Gkv](https://github.com/ybur-yug/gkv) happens to be a neat key-value store using Git. pyGKV is an experimental Python library for using gkv from within your Python modules.\r\n\r\n## Internals\r\n\r\nNothing special, for now. pyGKV uses the [Rython](https://github.com/mjpizz/rython) library to create an XML-RPC interface to a Ruby interpreter. It also marshalls Ruby datatypes to Python types, and vice versa. Neat stuff, eh?\r\n\r\n## Getting started\r\n\r\n- Clone this repo, and install dependencies. Also make sure you've got gkv installed.\r\n\r\n```bash\r\ngit clone https://github.com/rudimk/pyGKV.git\r\npip install -r requirements.txt\r\ngem install gkv\r\n```\r\n\r\n- Import the library into your namespace.\r\n\r\n```python\r\nimport pygkv\r\n```\r\n\r\n- Initialize a gkv store.\r\n\r\n```python\r\ndb = pygkv.init_gkv()\r\n```\r\n\r\n- Now you're all set! \r\n\r\n```python\r\ndb.set(\"apples\", 12)\r\ndb.set(\"oranges\", 13)\r\ndb.get(\"apples\")\r\ndb.all()\r\na = db.all()\r\na[0][\"apples\"]\r\n# 12\r\n```\r\n\r\n## What's next?\r\n\r\nI really like the idea of using Git as a KV. So I'm going to work on this. No, really.\r\n\r\n- Better exception handling.\r\n- PyPI package.\r\n- Bindings for Javascript, maybe Julia(irrelevant here, but worth bragging about.)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}